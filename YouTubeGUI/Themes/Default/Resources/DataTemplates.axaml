<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:renderers="clr-namespace:YouTubeScrap.Data.Renderers;assembly=YouTubeScrap"
                    xmlns:i="using:Avalonia.Xaml.Interactivity"
                    xmlns:ia="using:Avalonia.Xaml.Interactions.Core"
                    xmlns:extend="clr-namespace:YouTubeScrap.Data.Extend;assembly=YouTubeScrap"
                    xmlns:controls="clr-namespace:YouTubeGUI.Controls"
                    xmlns:xamlTools="clr-namespace:YouTubeGUI.Core.XamlTools"
                    xmlns:vms="clr-namespace:YouTubeGUI.ViewModels"
                    xmlns:sys="clr-namespace:System;assembly=netstandard"
                    x:Class="YouTubeGUI.Themes.Default.Resources.DataTemplates">
    <!-- Tools -->
    <xamlTools:NullToBoolConverter x:Key="BoolConverter"/>
    <xamlTools:IconConverter x:Key="IconConverter"/>
    
    <!-- Default -->
    <DataTemplate x:Key="Default">
        <Border Margin="5" Padding="0" Background="Transparent" MinWidth="400" Width="400">
            
        </Border>
    </DataTemplate>
    <!-- Home Items -->
    <DataTemplate x:Key="HomeVideoItem" DataType="renderers:RichVideoContent">
            <Border Classes="HomeItemBorder" x:Name="MainBorder">
                    <Grid ColumnDefinitions="*" RowDefinitions="Auto, Auto">
                        <i:Interaction.Behaviors>
                            <!--<ia:EventTriggerBehavior EventName="PointerReleased" SourceObject="{Binding #MainBorder}">
                                <ia:InvokeCommandAction Command="{Binding $parent[windows:MainWindow].VideoClickedCommand}" CommandParameter="{Binding}"/>
                            </ia:EventTriggerBehavior>-->
                            <ia:EventTriggerBehavior EventName="PointerEnter" SourceObject="{Binding #MainBorder}">
                                <ia:ChangePropertyAction TargetObject="{Binding #VideoOverlayView}" PropertyName="OnIsVisible" Value="True"/>
                            </ia:EventTriggerBehavior>
                            <ia:EventTriggerBehavior EventName="PointerLeave" SourceObject="{Binding #MainBorder}">
                                <ia:ChangePropertyAction TargetObject="{Binding #VideoOverlayView}" PropertyName="OnIsVisible" Value="False"/>
                            </ia:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                        <Grid Grid.Row="0" Margin="0 0 0 5">
                            <controls:WebImage ImageSize="Wide" Images="{Binding Thumbnails}" Name="Thumbnail"/>
                            <controls:ThumbnailOverlayView x:Name="VideoOverlayView" DataContext="{Binding OverlayData}"/>
                        </Grid>
                        <Grid Grid.Row="1" ColumnDefinitions="Auto, *" RowDefinitions="Auto, *">
                            <Border Width="40" Height="40"/>
                            <controls:WebImage Grid.Column="0" Grid.Row="0" Width="40" Margin="0 0 3 0" ImageSize="Square"
                                           Images="{Binding ChannelThumbnail.Thumbnails}"/>
                        <StackPanel Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Orientation="Vertical" x:Name="SpText">
                            <TextBlock Classes="TextBlockItemRenderer" Text="{Binding Title}"
                                       Width="{Binding #SpText.Bounds.Width}"/>
                            <TextBlock Classes="TextBlockItemRenderer"
                                       Text="{Binding OwnerText}"
                                       Foreground="LightBlue" FontSize="{DynamicResource FontSizeSmall}"/>
                            <WrapPanel Orientation="Horizontal" x:Name="WpText">
                                <TextBlock Classes="TextBlockItemRenderer" Foreground="LightGray"
                                           FontSize="{DynamicResource FontSizeSmall}"
                                           Width="{Binding #WpText.Bounds.Width}">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Path="ShortViewCountText"/>
                                            <Binding Path="PublishedTimeText" FallbackValue="LIVE"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </WrapPanel>
                        </StackPanel>
                        </Grid>
                    </Grid>
                </Border>
        </DataTemplate> <!-- HomeRichVideo -->
    <DataTemplate x:Key="HomeRadioItem" DataType="renderers:RadioRenderer">
            <Border Classes="HomeItemBorder" x:Name="RadioMainBorder">
                <Grid ColumnDefinitions="*" RowDefinitions="Auto, Auto">
                    <i:Interaction.Behaviors>
                        <ia:EventTriggerBehavior EventName="PointerEnter" SourceObject="{Binding #RadioMainBorder}">
                            <ia:ChangePropertyAction TargetObject="{Binding #RadioOverlayView}" PropertyName="OnIsVisible" Value="True"/>
                        </ia:EventTriggerBehavior>
                        <ia:EventTriggerBehavior EventName="PointerLeave" SourceObject="{Binding #RadioMainBorder}">
                            <ia:ChangePropertyAction TargetObject="{Binding #RadioOverlayView}" PropertyName="OnIsVisible" Value="False"/>
                        </ia:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                    <Grid Grid.Row="0" Margin="0 0 0 5">
                        <controls:WebImage Images="{Binding Thumbnails}"/>
                        <controls:ThumbnailOverlayView x:Name="RadioOverlayView" DataContext="{Binding OverlayData}"/>
                    </Grid>
                    <Grid Grid.Row="1" ColumnDefinitions="Auto" RowDefinitions="Auto, Auto" x:Name="gText">
                        <TextBlock Grid.Row="0" Classes="TextBlockItemRenderer"
                                   Text="{Binding Title}"
                                   Width="{Binding #gText.Bounds.Width}"/>
                        <TextBlock Grid.Row="1" Classes="TextBlockItemRenderer"
                                   Text="{Binding VideoCountText}"
                                   Foreground="LightBlue"/>
                    </Grid>
                </Grid>
            </Border>
        </DataTemplate> <!-- HomeRadio -->
    <DataTemplate x:Key="HomeDisplayAd" DataType="renderers:DisplayAdRenderer">
            <Border Classes="HomeItemBorder" x:Name="AdMainBorder">
                <Grid ColumnDefinitions="*" RowDefinitions="Auto, Auto">
                    <Grid Grid.Row="0" Margin="0 0 0 5" x:Name="adgImage">
                        <controls:WebImage Images="{Binding Image}"/>
                    </Grid>
                    <Grid Grid.Row="1" ColumnDefinitions="*" RowDefinitions="Auto, *">
                        <TextBlock Grid.Row="0" Classes="TextBlockItemRenderer"
                                   Text="{Binding TitleText}"
                                   Width="{Binding #adgImage.Bounds.Width}"/>
                        <TextBlock Grid.Row="1" Classes="TextBlockItemRenderer"
                                   Text="{Binding BodyText}"
                                   Foreground="Red" Width="{Binding #adgImage.Bounds.Width}"/>
                    </Grid>
                </Grid>
            </Border>
        </DataTemplate> <!-- HomeDisplayAd-->
    <DataTemplate x:Key="ContinuationItem">
            <Border Classes="HomeItemBorder" BorderBrush="Blue" BorderThickness="1">
                <TextBlock Text="Continuation"/>
            </Border>
    </DataTemplate> <!-- Continuation -->
    <!-- Home Sections -->
    <DataTemplate x:Key="RichShelf" DataType="renderers:RichShelfRenderer">
            <Border Classes="HomeSectionBorder">
                <Grid ColumnDefinitions="Auto, *" RowDefinitions="Auto, *">
                    <controls:WebImage Images="{Binding Thumbnails}" IsVisible="{Binding Thumbnails, Converter={StaticResource BoolConverter}}"
                                       Width="30" Grid.Column="0" Grid.Row="0"/>
                    <StackPanel Grid.Column="1" Grid.Row="0" Spacing="3" Margin="2">
                        <TextBlock Text="{Binding Title}"
                                   Foreground="{DynamicResource ForegroundBrush}" FontSize="{DynamicResource FontSizeLarge}"/>
                        <TextBlock Text="{Binding Subtitle}"
                                   Foreground="Gray" FontSize="{DynamicResource FontSizeNormal}"/>
                    </StackPanel>
                    <ScrollViewer Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto">
                        <ItemsRepeater Items="{Binding Contents}"
                                       ItemTemplate="{StaticResource HomeItemRef}" HorizontalCacheLength="1" ElementClearing="ItemsRepeater_OnElementClearing">
                            <ItemsRepeater.Layout>
                                <StackLayout Orientation="Horizontal"/>
                            </ItemsRepeater.Layout>
                        </ItemsRepeater>
                    </ScrollViewer>
                </Grid>
            </Border>
        </DataTemplate> <!-- RichShelf -->
    <DataTemplate x:Key="CompactPromotedItem" DataType="renderers:CompactPromotedItemRenderer">
            <Border Classes="HomeSectionBorder">
                <Grid ColumnDefinitions="Auto, *" RowDefinitions="Auto, *">
                </Grid>
            </Border>
        </DataTemplate> <!-- CompactPromoted -->
    <!-- Guide templates -->
    <DataTemplate x:Key="GuideEntry" DataType="{x:Type renderers:GuideEntryRenderer}">
        <Border BorderThickness="0" Background="Transparent" x:Name="EntryMainBorder"
                        ToolTip.Tip="{Binding Accessibility}">
                <i:Interaction.Behaviors>
                    <ia:EventTriggerBehavior EventName="PointerEnter" SourceObject="{Binding #EntryMainBorder}">
                        <ia:ChangePropertyAction TargetObject="{Binding #EntryMainBorder}" PropertyName="Background" Value="Gray"/>
                    </ia:EventTriggerBehavior>
                    <ia:EventTriggerBehavior EventName="PointerLeave" SourceObject="{Binding #EntryMainBorder}">
                        <ia:ChangePropertyAction TargetObject="{Binding #EntryMainBorder}" PropertyName="Background" Value="Transparent"/>
                    </ia:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <Grid ColumnDefinitions="Auto, Auto, Auto, *, Auto" RowDefinitions="35" Margin="10 0">
                    <controls:WebImage Grid.Column="0" Margin="0 3" IsVisible="{Binding Thumbnails, Converter={StaticResource BoolConverter}}"
                                       Images="{Binding Thumbnails}"/>
                    <Path Grid.Column="1" IsVisible="{Binding Icon, Converter={StaticResource BoolConverter}}"
                          Data="{Binding Icon, Converter={StaticResource IconConverter}}"
                          Fill="{DynamicResource ForegroundBrush}" Margin="5 0" Width="20"
                          Stretch="Uniform" VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="2" Text="{Binding FormattedTitle}" Foreground="{DynamicResource ForegroundBrush}"
                               FontSize="{DynamicResource FontSizeNormal}" VerticalAlignment="Center" Margin="5 0" TextTrimming="CharacterEllipsis"/>
                    <Path Grid.Column="4" IsVisible="{Binding Badges.LiveBroadcasting, FallbackValue=False}" Fill="LightBlue"
                          Data="{Binding Badges, Converter={StaticResource IconConverter}}"
                          VerticalAlignment="Center"/>
                </Grid>
            </Border>
    </DataTemplate> <!-- Guide entry -->
    <DataTemplate x:Key="GuideCollapsibleEntry" DataType="{x:Type renderers:GuideCollapsibleEntryRenderer}">
        <Border BorderThickness="0">
            <StackPanel Orientation="Vertical">
                <ItemsRepeater x:Name="ItemsRepeaterSubs" Items="{Binding ExpandableItems}" IsVisible="False"
                               ItemTemplate="{StaticResource GuideItemRef}" ElementClearing="ItemsRepeater_OnElementClearing"/>
                <ToggleButton x:Name="ToggleItemsBtn">
                    <i:Interaction.Behaviors>
                        <ia:EventTriggerBehavior SourceObject="{Binding #ToggleItemsBtn}" EventName="Checked">
                            <ia:ChangePropertyAction TargetObject="{Binding #ItemsRepeaterSubs}" PropertyName="IsVisible"
                                                     Value="True"/>
                        </ia:EventTriggerBehavior>
                        <ia:EventTriggerBehavior SourceObject="{Binding #ToggleItemsBtn}" EventName="Unchecked">
                            <ia:ChangePropertyAction TargetObject="{Binding #ItemsRepeaterSubs}" PropertyName="IsVisible"
                                                     Value="False"/>
                        </ia:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                    <ToggleButton.Styles>
                        <Style Selector="ToggleButton">
                            <Setter Property="Template">
                                <ControlTemplate>
                                    <ContentControl ContentTemplate="{StaticResource GuideEntry}"
                                                    Content="{Binding ExpanderItem}"/>
                                </ControlTemplate>
                            </Setter>
                        </Style>
                        <Style Selector="ToggleButton:checked">
                            <Setter Property="Template">
                                <ControlTemplate>
                                    <ContentControl ContentTemplate="{StaticResource GuideEntry}"
                                                      Content="{Binding CollapserItem}"/>
                                </ControlTemplate>
                            </Setter>
                        </Style>
                    </ToggleButton.Styles>
                </ToggleButton>
            </StackPanel>
        </Border>
    </DataTemplate> <!-- Guide collapsible entry -->
    <DataTemplate x:Key="GuideDownloadsEntry" DataType="{x:Type renderers:GuideDownloadsEntryRenderer}">
        <Border>
        </Border>
    </DataTemplate> <!-- Guide download entry -->
    <DataTemplate x:Key="GuideSignInPromoRenderer" DataType="{x:Type extend:GuideSigninPromoRenderer}">
        <Border BorderThickness="0 0 0 1" BorderBrush="Gray">
            <StackPanel Orientation="Vertical" Margin="10 3 10 0">
                <TextBlock Text="{Binding DescriptiveText}" TextWrapping="Wrap"
                           Foreground="{DynamicResource ForegroundBrush}" FontSize="{DynamicResource FontSizeNormal}"/>
                <Button Classes="LoginBtn" Content="{Binding ActionText}" Margin="0 3" CommandParameter="{Binding SignInButtonRenderer}"/>
            </StackPanel>
        </Border>
    </DataTemplate> <!-- Guide signin promo -->
    <!-- Guide sections -->
    <DataTemplate x:Key="GuideSection" DataType="{x:Type extend:GuideSection}">
        <Border BorderThickness="0 0 0 1" BorderBrush="Gray">
            <StackPanel Orientation="Vertical">
                <TextBlock Text="{Binding FormattedTitle}" FontSize="{DynamicResource FontSizeBig}"
                           TextTrimming="CharacterEllipsis" Foreground="{DynamicResource ForegroundBrush}" Margin="10 3 0 0"/>
                <ItemsRepeater IsVisible="True" Items="{Binding Items}" ItemTemplate="{StaticResource GuideItemRef}"
                               ElementClearing="ItemsRepeater_OnElementClearing"/>
            </StackPanel>
        </Border>
    </DataTemplate> <!-- Guide section -->
    <DataTemplate x:Key="GuideSubsSection" DataType="{x:Type extend:GuideSubscriptionSection}">
        <Border BorderThickness="0 0 0 1" BorderBrush="Gray">
            <StackPanel Orientation="Vertical">
                <TextBlock Text="{Binding FormattedTitle}" FontSize="{DynamicResource FontSizeBig}"
                           TextTrimming="CharacterEllipsis" Foreground="{DynamicResource ForegroundBrush}" Margin="10 3 0 0"/>
                <ItemsRepeater Items="{Binding Items}" ItemTemplate="{StaticResource GuideItemRef}"
                               ElementClearing="ItemsRepeater_OnElementClearing"/>
            </StackPanel>
        </Border>
    </DataTemplate> <!-- Guide subscriptions section -->
    <DataTemplate x:Key="GuideCollapsibleSection" DataType="{x:Type renderers:GuideCollapsibleSectionEntryRenderer}">
        <Border BorderThickness="0 1 0 0" BorderBrush="Gray">
            <StackPanel Orientation="Vertical">
                <ContentControl Content="{Binding HeaderEntry}" ContentTemplate="{StaticResource GuideEntry}"/>
                <ItemsRepeater Items="{Binding SectionItems}" ItemTemplate="{StaticResource GuideItemRef}"
                               ElementClearing="ItemsRepeater_OnElementClearing"/>
            </StackPanel>
        </Border>
    </DataTemplate> <!-- Guide collapsible section entry -->
    
    <!-- Recycle pools -->
    <RecyclePool x:Key="HomeRecyclePool"/>
    <RecyclePool x:Key="GuideRecyclePool"/>
    
    <RecyclingElementFactory x:Key="HomeItemRef" RecyclePool="{StaticResource HomeRecyclePool}"
                             SelectTemplateKey="HomeREF_OnSelectTemplateKey">
        <RecyclingElementFactory.Templates>
            <StaticResource x:Key="DefItem" ResourceKey="Default"/>
            <StaticResource x:Key="VideoItem" ResourceKey="HomeVideoItem"/>
            <StaticResource x:Key="RadioItem" ResourceKey="HomeRadioItem"/>
            <StaticResource x:Key="DisplayAd" ResourceKey="HomeDisplayAd"/>
            <StaticResource x:Key="ContinuationItem" ResourceKey="ContinuationItem"/>
            <StaticResource x:Key="Shelf" ResourceKey="RichShelf"/>
            <StaticResource x:Key="PromotedItem" ResourceKey="CompactPromotedItem"/>
        </RecyclingElementFactory.Templates>
    </RecyclingElementFactory> <!-- RecycleElementFactory home -->
    <RecyclingElementFactory x:Key="GuideItemRef" RecyclePool="{StaticResource GuideRecyclePool}"
                             SelectTemplateKey="GuideItemRef_OnSelectTemplateKey">
        <RecyclingElementFactory.Templates>
            <StaticResource x:Key="DefItem" ResourceKey="Default"/>
            <StaticResource x:Key="Entry" ResourceKey="GuideEntry"/>
            <StaticResource x:Key="CollapsibleEntry" ResourceKey="GuideCollapsibleEntry"/>
            <StaticResource x:Key="DownloadsEntry" ResourceKey="GuideDownloadsEntry"/>
            <StaticResource x:Key="SignInPromo" ResourceKey="GuideSignInPromoRenderer"/>
            <!---->
            <StaticResource x:Key="GuideSection" ResourceKey="GuideSection"/>
            <StaticResource x:Key="GuideSubsSection" ResourceKey="GuideSubsSection"/>
            <StaticResource x:Key="GuideCollapsibleSection" ResourceKey="GuideCollapsibleSection"/>
        </RecyclingElementFactory.Templates>
    </RecyclingElementFactory> <!-- RecycleElementFactory guide -->
    
</ResourceDictionary>